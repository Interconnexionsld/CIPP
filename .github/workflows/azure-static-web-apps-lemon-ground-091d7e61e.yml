name: Azure Static Web Apps CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_deploy_job:
    # Inclut workflow_dispatch pour éviter les "skipped" quand tu lances à la main
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Set up Node (align with engines.node)
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.0'   # adapte si ton package.json demande autre chose
          cache: 'yarn'             # sera ignoré si pas de yarn.lock

      - name: Build (Next.js static export)
        run: |
          set -e
          # Si un jour tu bascules sur pnpm/yarn sans Corepack global, décommente:
          # corepack enable

          if [ -f yarn.lock ]; then
            echo "Detected yarn.lock -> using yarn"
            yarn install --frozen-lockfile
            yarn build
            yarn export
          elif [ -f pnpm-lock.yaml ]; then
            echo "Detected pnpm-lock.yaml -> using pnpm"
            corepack enable
            pnpm install --frozen-lockfile
            pnpm build
            pnpm export
          elif [ -f package-lock.json ]; then
            echo "Detected package-lock.json -> using npm ci"
            npm ci
            npm run build
            npm run export
          else
            echo "No lockfile detected -> using npm install (fallback)"
            npm install
            npm run build
            npm run export
          fi

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          # Si ton app est dans un sous-dossier (ex: "frontend"), change ici:
